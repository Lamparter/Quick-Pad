<Application
	x:Class="QuickPad.UI.App"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
	xmlns:commands="using:QuickPad.Mvvm.Commands"
	xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
	xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
	xmlns:controls="using:Microsoft.UI.Xaml.Controls"
	xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives">

	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/ResourceDictionaries/RichEditBox.xaml" />
				<ResourceDictionary Source="/ResourceDictionaries/TextBox.xaml" />
				<XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
				<controls:XamlControlsResources ControlsResourcesVersion="Version2" />

				<!--  WinUI style is breaking us, overriding with a modified version solves crashes in release  -->
				<ResourceDictionary>
					<Style x:Key="MUX_NavigationViewItemPresenterStyleWhenOnLeftPane" TargetType="primitives:NavigationViewItemPresenter">
						<Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
						<Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
						<Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
						<Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
						<Setter Property="UseSystemFocusVisuals" Value="True" />
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
									<Grid
										x:Name="LayoutRoot"
										MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}"
										Margin="4,2,4,2"
										contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}"
										contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
										Background="{TemplateBinding Background}"
										Control.IsTemplateFocusTarget="True">
										<Grid.Resources>
											<contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
												<DoubleAnimation
													Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
													Storyboard.TargetProperty="Angle"
													From="0.0"
													To="180.0"
													Duration="0:0:0.1" />
											</contract7NotPresent:Storyboard>
											<contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
												<DoubleAnimation
													Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
													Storyboard.TargetProperty="Angle"
													From="180.0"
													To="0.0"
													Duration="0:0:0.1" />
											</contract7NotPresent:Storyboard>
										</Grid.Resources>

										<Grid x:Name="PresenterContentRootGrid">
											<!--  Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation.  -->
											<Grid HorizontalAlignment="Left" VerticalAlignment="Center">

												<Rectangle
													x:Name="SelectionIndicator"
													Width="3"
													Height="16"
													contract7Present:RadiusX="2"
													contract7Present:RadiusY="2"
													Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
													Opacity="0.0" />
											</Grid>

											<Grid
												x:Name="ContentGrid"
												MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}"
												HorizontalAlignment="Stretch">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="*" />
													<ColumnDefinition Width="Auto" />
												</Grid.ColumnDefinitions>

												<Border x:Name="IconColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerIconWidth}">
													<Viewbox
														x:Name="IconBox"
														Height="16"
														Margin="{ThemeResource NavigationViewItemOnLeftIconBoxMargin}">
														<ContentPresenter
															x:Name="Icon"
															controls:AnimatedIcon.State="Normal"
															Content="{TemplateBinding Icon}" />
													</Viewbox>
												</Border>

												<ContentPresenter
													x:Name="ContentPresenter"
													Grid.Column="1"
													Margin="{ThemeResource NavigationViewItemContentPresenterMargin}"
													Padding="{TemplateBinding Padding}"
													HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													AutomationProperties.AccessibilityView="Raw"
													Content="{TemplateBinding Content}"
													ContentTemplate="{TemplateBinding ContentTemplate}"
													ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
													ContentTransitions="{TemplateBinding ContentTransitions}" />

												<Grid
													x:Name="ExpandCollapseChevron"
													Grid.Column="2"
													Width="40"
													Margin="{ThemeResource NavigationViewItemExpandChevronMargin}"
													HorizontalAlignment="Right"
													Background="Transparent"
													Visibility="Collapsed">
													<controls:AnimatedIcon
														x:Name="ExpandCollapseChevronIcon"
														Width="12"
														Height="12"
														HorizontalAlignment="Center"
														VerticalAlignment="Center"
														controls:AnimatedIcon.State="NormalOff"
														AutomationProperties.AccessibilityView="Raw"
														RenderTransformOrigin="0.5, 0.5">
														<animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
														<controls:AnimatedIcon.FallbackIconSource>
															<controls:FontIconSource
																FontFamily="{StaticResource SymbolThemeFontFamily}"
																FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}"
																Foreground="{ThemeResource NavigationViewItemForeground}"
																Glyph="{StaticResource NavigationViewItemExpandedGlyph}" />
														</controls:AnimatedIcon.FallbackIconSource>
														<controls:AnimatedIcon.RenderTransform>
															<contract7NotPresent:RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
														</controls:AnimatedIcon.RenderTransform>
													</controls:AnimatedIcon>
												</Grid>
											</Grid>
										</Grid>

										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="PointerStates">
												<VisualState x:Name="Normal" />
												<VisualState x:Name="PointerOver">
													<VisualState.Setters>
														<Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
														<Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
														<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
														<Setter Target="Icon.(local:AnimatedIcon.State)" Value="PointerOver" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="Pressed">
													<VisualState.Setters>
														<Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
														<Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
														<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
														<Setter Target="Icon.(local:AnimatedIcon.State)" Value="Pressed" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="Selected">
													<VisualState.Setters>
														<Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
														<Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
														<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="PointerOverSelected">
													<VisualState.Setters>
														<Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
														<Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
														<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
														<Setter Target="Icon.(local:AnimatedIcon.State)" Value="PointerOver" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="PressedSelected">
													<VisualState.Setters>
														<Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
														<Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
														<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
														<Setter Target="Icon.(local:AnimatedIcon.State)" Value="Pressed" />
													</VisualState.Setters>
												</VisualState>
											</VisualStateGroup>

											<VisualStateGroup x:Name="DisabledStates">
												<VisualState x:Name="Enabled" />
												<VisualState x:Name="Disabled">
													<VisualState.Setters>
														<Setter Target="LayoutRoot.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}" />
													</VisualState.Setters>
												</VisualState>
											</VisualStateGroup>

											<VisualStateGroup x:Name="IconStates">
												<VisualState x:Name="IconVisible" />
												<VisualState x:Name="IconCollapsed">
													<VisualState.Setters>
														<Setter Target="IconBox.Visibility" Value="Collapsed" />
														<Setter Target="IconColumn.Width" Value="16" />
													</VisualState.Setters>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="ChevronStates">
												<VisualState x:Name="ChevronHidden" />
												<VisualState x:Name="ChevronVisibleOpen">
													<VisualState.Setters>
														<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
														<contract7NotPresent:Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="ChevronVisibleClosed">
													<VisualState.Setters>
														<Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
														<contract7NotPresent:Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0" />
													</VisualState.Setters>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="PointerChevronStates">
												<VisualState x:Name="NormalChevronHidden" />
												<VisualState x:Name="NormalChevronVisibleOpen">
													<VisualState.Setters>
														<Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOn" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="NormalChevronVisibleClosed">
													<VisualState.Setters>
														<Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOff" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="PointerOverChevronHidden">
													<VisualState.Setters>
														<Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="PointerOverChevronVisibleOpen">
													<VisualState.Setters>
														<Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOn" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="PointerOverChevronVisibleClosed">
													<VisualState.Setters>
														<Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="PressedChevronHidden">
													<VisualState.Setters>
														<Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="PressedChevronVisibleOpen">
													<VisualState.Setters>
														<Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOn" />
													</VisualState.Setters>
												</VisualState>
												<VisualState x:Name="PressedChevronVisibleClosed">
													<VisualState.Setters>
														<Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff" />
													</VisualState.Setters>
												</VisualState>
											</VisualStateGroup>

											<VisualStateGroup x:Name="PaneAndTopLevelItemStates">
												<VisualState x:Name="NotClosedCompactAndTopLevelItem" />
												<VisualState x:Name="ClosedCompactAndTopLevelItem">
													<VisualState.Setters>
														<Setter Target="ContentPresenter.Margin" Value="{ThemeResource NavigationViewCompactItemContentPresenterMargin}" />
													</VisualState.Setters>
												</VisualState>
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
									</Grid>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
			<FontFamily x:Key="RegExIcon">/Assets/Fonts/codicon.ttf#codicon</FontFamily>
		</ResourceDictionary>
	</Application.Resources>
</Application>